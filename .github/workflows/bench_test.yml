name: bench
on:
  push:
    branches: [ci]
  pull_request:
    branches: [ci]
jobs:
  bench_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        # lang: [csharp, go, haskell, haxe, java, javascript, julia, kotlin, python, rust, swift, typescript, vlang]
        # lang: [csharp, go, haskell, haxe, java, javascript, julia, kotlin, swift]
        lang: [typescript, vlang]
    steps:
      - uses: actions/checkout@v2
      - name: Install vlang
        if: matrix.lang == 'vlang'
        run: |
          docker run --rm -v /tmp/hostlib/:/working/ -w /working/ thevlang/vlang:alpine cp /lib/ld-musl-x86_64.so.1 .
          sudo cp /tmp/hostlib/ld-musl-x86_64.so.1 /lib/
      - name: Install deno
        if: matrix.lang == 'typescript'
        run: |
          curl -fsSL https://deno.land/x/install/install.sh | sh
          echo 'export PATH=$HOME/.deno/bin:$PATH' >> $HOME/.bashrc
      - name: Install haskell
        if: matrix.lang == 'haskell'
        run: |
          stack upgrade
      - name: Install wasm
        if: matrix.lang == 'rust'
        run: |
          curl https://get.wasmer.io -sSfL | sh
          source $HOME/.wasmer/wasmer.sh
          wasmer -V
          curl https://wasmtime.dev/install.sh -sSf | bash
          echo 'PATH=$HOME/.wasmtime/bin:$PATH' >> $HOME/.bashrc
      - name: Build
        run: |
          pushd bench
          dotnet run -c Release -p tool -- --task build --langs ${{ matrix.lang }} 
          popd
      - name: Test
        run: |
          pushd bench
          dotnet run -c Release -p tool -- --task test --langs ${{ matrix.lang }} 
          popd
      - name: Bench
        run: |
          pushd bench
          dotnet run -c Release -p tool -- --task bench --langs ${{ matrix.lang }} 
          popd
      - uses: actions/upload-artifact@v2
        with:
          name: log
          path: bench/build/_results/**/*.json
          if-no-files-found: error
